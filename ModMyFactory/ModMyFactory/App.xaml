<Application x:Class="ModMyFactory.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mvvm="clr-namespace:ModMyFactory.MVVM"
             xmlns:controls="clr-namespace:ModMyFactory.Controls"
             xmlns:converter="clr-namespace:ModMyFactory.MVVM.Converters"
             xmlns:modsettings="clr-namespace:ModMyFactory.Models.ModSettings"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <!-- For design time IntelliSense. -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Lang/Strings.en.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <ResourceDictionary x:Key="Strings.de" Source="Lang/Strings.de.xaml"/>
            <ResourceDictionary x:Key="Strings.ru" Source="Lang/Strings.ru.xaml"/>
            <ResourceDictionary x:Key="Strings.pt" Source="Lang/Strings.pt.xaml"/>
            <ResourceDictionary x:Key="Strings.zh" Source="Lang/Strings.zh.xaml"/>
            <ResourceDictionary x:Key="Strings.ko" Source="Lang/Strings.ko.xaml"/>

            <Color x:Key="BackgroundColor">White</Color>
            <Color x:Key="BorderColor">LightGray</Color>
            <Color x:Key="HoverColor">#5087CEFA</Color>
            <Color x:Key="SelectionColor">LightSkyBlue</Color>
            <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}"/>
            <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}"/>
            <SolidColorBrush x:Key="HoverBrush" Color="{StaticResource HoverColor}"/>
            <SolidColorBrush x:Key="SelectionBrush" Color="{StaticResource SelectionColor}"/>

            <converter:MultiplyConverter x:Key="MultiplyConverter"/>
            <converter:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
            <BooleanToVisibilityConverter x:Key="VisibilityConverter"/>

            <DataTemplate x:Key="BooleanModSettingTemplate" DataType="{x:Type modsettings:BooleanModSetting}">
                <CheckBox Margin="4" IsChecked="{Binding Value, Mode=TwoWay}" Content="{Binding Name}"/>
            </DataTemplate>

            <DataTemplate x:Key="IntegerModSettingTemplate" DataType="{x:Type modsettings:IntegerModSetting}">

            </DataTemplate>

            <DataTemplate x:Key="IntegerListModSettingTemplate" DataType="{x:Type modsettings:IntegerListModSetting}">

            </DataTemplate>

            <DataTemplate x:Key="FloatingPointModSettingTemplate" DataType="{x:Type modsettings:FloatingPointModSetting}">

            </DataTemplate>

            <DataTemplate x:Key="FloatingPointListModSettingTemplate" DataType="{x:Type modsettings:FloatingPointListModSetting}">

            </DataTemplate>

            <DataTemplate x:Key="StringModSettingTemplate" DataType="{x:Type modsettings:StringModSetting}">

            </DataTemplate>

            <DataTemplate x:Key="StringListModSettingTemplate" DataType="{x:Type modsettings:StringListModSetting}">

            </DataTemplate>

            <Style x:Key="{x:Type Image}" TargetType="{x:Type Image}">
                <Style.Setters>
                    <Setter Property="RenderOptions.EdgeMode" Value="Aliased"/>
                    <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
                </Style.Setters>
            </Style>

            <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="Gray"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="Menu">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Menu">
                            <Border Background="{StaticResource BackgroundBrush}">
                                <StackPanel x:Name="ItemsHost" ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True"/>
                            </Border>
                            
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMainMenu" Value="False">
                                    <Trigger.Setters>
                                        <Setter TargetName="ItemsHost" Property="Orientation" Value="Vertical"/>
                                    </Trigger.Setters>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
                <Setter Property="Height" Value="1"/>
                <Setter Property="Margin" Value="30,4,10,4"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Separator">
                            <Border Background="{StaticResource BorderBrush}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="MenuItem">
                <ControlTemplate.Resources>
                    <SolidColorBrush x:Key="AnimatedBackgroundBrush" Color="{StaticResource BackgroundColor}"/>
                </ControlTemplate.Resources>
                
                <Border x:Name="Border" Background="Transparent">
                    <Grid>
                        <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                            <Border x:Name="SubmenuBorder" BorderThickness="1" Background="{StaticResource AnimatedBackgroundBrush}" BorderBrush="{StaticResource BorderBrush}">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                        </Popup>
                    </Grid>
                </Border>

                <ControlTemplate.Triggers>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" From="Transparent" To="{StaticResource SelectionColor}" Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color">
                                        <DiscreteColorKeyFrame KeyTime="0:0:0" Value="Transparent"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
                <Border x:Name="Border" BorderBrush="{StaticResource BackgroundBrush}" BorderThickness="1" Background="{StaticResource BackgroundBrush}">
                    <Grid Margin="0,1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto" MinWidth="13" SharedSizeGroup="Shortcut"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Image x:Name="Icon" Grid.Column="0" Margin="6,0" Width="18" Height="18" VerticalAlignment="Center" Stretch="None" Source="{TemplateBinding Icon}">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}" BasedOn="{StaticResource {x:Type Image}}">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" Margin="0,2" VerticalAlignment="Center"/>
                        <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="25,0,13,0" VerticalAlignment="Center" DockPanel.Dock="Right"
                                   FontWeight="Thin" Foreground="DimGray">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <Rectangle x:Name="CheckBox" Grid.Column="3" Width="5" Margin="0,-1" Fill="{StaticResource BackgroundBrush}" Visibility="Collapsed"/>
                    </Grid>
                </Border>
                
                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                    </Trigger>
                    <Trigger Property="InputGestureText" Value="">
                        <Setter TargetName="InputGestureText" Property="Visibility" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" From="Transparent" To="{StaticResource HoverColor}" Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color">
                                        <DiscreteColorKeyFrame KeyTime="0:0:0" Value="Transparent"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="Gray"/>
                    </Trigger>
                    <Trigger Property="IsCheckable" Value="True">
                        <Setter TargetName="CheckBox" Property="Visibility" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="mvvm:MenuItemProperties.ShowChecked" Value="True">
                        <Setter TargetName="CheckBox" Property="Visibility" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="CheckBox" Property="Fill" Value="{StaticResource SelectionBrush}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="MenuItem">
                <Border x:Name="Border" BorderBrush="{StaticResource BackgroundBrush}" BorderThickness="1" Background="{StaticResource BackgroundBrush}">
                    <Grid Margin="0,1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Image x:Name="Icon" Grid.Column="0" Margin="6,0" Width="18" Height="18" VerticalAlignment="Center" Stretch="None" Source="{TemplateBinding Icon}">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}" BasedOn="{StaticResource {x:Type Image}}">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" Margin="0,2" VerticalAlignment="Center"/>
                        <Path Grid.Column="2" Margin="4" VerticalAlignment="Center" Fill="Black" Data="M 0 0 L 4 4 L 0 8 Z"/>

                        <Popup x:Name="Popup" Placement="Right" HorizontalOffset="1" VerticalOffset="-3"
                               IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                            <Border x:Name="SubmenuBorder"
                                    Background="{StaticResource BackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource BorderBrush}">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                            </Border>
                        </Popup>
                    </Grid>
                </Border>

                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" From="Transparent" To="{StaticResource HoverColor}" Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color">
                                        <DiscreteColorKeyFrame KeyTime="0:0:0" Value="Transparent"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="Gray"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="{x:Type MenuItem}" TargetType="MenuItem">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Style.Triggers>
                    <Trigger Property="Role" Value="TopLevelHeader">
                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                        <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                    </Trigger>
                    <Trigger Property="Role" Value="TopLevelItem">
                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuItem">
                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
                <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="1">
                                <ScrollViewer>
                                    <ItemsPresenter Margin="2,1,2,2"/>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type controls:DragDropReadyListBox}" TargetType="{x:Type controls:DragDropReadyListBox}" BasedOn="{StaticResource {x:Type ListBox}}"/>

            <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border Padding="0,1,0,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Border x:Name="Border" Grid.Column="0" Background="Transparent" BorderBrush="Transparent" BorderThickness="1">
                                        <ContentPresenter/>
                                    </Border>
                                    <Rectangle x:Name="Rectangle" Grid.Column="1" Width="4" Fill="Transparent"/>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" SourceName="Border" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" From="Transparent" To="{StaticResource HoverColor}" Duration="0:0:0.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color">
                                                    <DiscreteColorKeyFrame KeyTime="0:0:0" Value="Transparent"/>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                                <Trigger Property="IsSelected" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="Rectangle" Storyboard.TargetProperty="Fill.Color" From="Transparent" To="{StaticResource SelectionColor}" Duration="0:0:0.2"/>
                                                <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color" From="Transparent" To="{StaticResource SelectionColor}" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Rectangle" Storyboard.TargetProperty="Fill.Color">
                                                    <DiscreteColorKeyFrame KeyTime="0:0:0" Value="Transparent"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color">
                                                    <DiscreteColorKeyFrame KeyTime="0:0:0" Value="Transparent"/>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                
                                <Trigger Property="IsEnabled" Value="False">
                                    <Trigger.Setters>
                                        <Setter Property="Foreground" Value="Gray"/>
                                    </Trigger.Setters>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="MinWidth" Value="75"/>
                <Setter Property="MinHeight" Value="23"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="EditStates">
                                        <VisualState x:Name="Editable">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_EditableTextBox">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentSite">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Uneditable"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <ToggleButton x:Name="ToggleButton" Focusable="false" ClickMode="Press"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <ControlTemplate.Resources>
                                                <SolidColorBrush x:Key="AnimatedSelectionBrush" Color="Transparent"/>
                                            </ControlTemplate.Resources>

                                            <Border x:Name="Border1" BorderBrush="#FFADADAD" BorderThickness="1" Background="#FFE1E1E1">
                                                <Border Margin="-1" x:Name="Border2" BorderBrush="Transparent" BorderThickness="1" Background="Transparent">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="20"/>
                                                        </Grid.ColumnDefinitions>

                                                        <Path Grid.Column="1" Stroke="DimGray" StrokeThickness="1.2" Data="M 0 0 L 4 4 L 8 0"
                                                              HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Grid>
                                                </Border>
                                                
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup Name="CommonStates">
                                                        <VisualState Name="Normal"/>
                                                        <VisualState Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Storyboard.TargetName="Border1" Storyboard.TargetProperty="BorderBrush.Color" To="#FF0078D7" Duration="0"/>
                                                                <ColorAnimation Storyboard.TargetName="Border1" Storyboard.TargetProperty="Background.Color" To="#FFE5F1FB" Duration="0:0:0:0.3"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState Name="Pressed"/>
                                                        <VisualState Name="Disabled">
                                                            <Storyboard>
                                                                <ColorAnimation Storyboard.TargetName="Border1" Storyboard.TargetProperty="BorderBrush.Color" To="#FFBFBFBF" Duration="0"/>
                                                                <ColorAnimation Storyboard.TargetName="Border1" Storyboard.TargetProperty="Background.Color" To="#FFCCCCCC" Duration="0"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>

                                                    <VisualStateGroup x:Name="CheckStates">
                                                        <VisualState x:Name="Checked">
                                                            <Storyboard>
                                                                <ColorAnimation Storyboard.TargetName="Border2" Storyboard.TargetProperty="BorderBrush.Color" To="#FF005499" Duration="0"/>
                                                                <ColorAnimation Storyboard.TargetName="Border2" Storyboard.TargetProperty="Background.Color" To="#FFCCE4F7" Duration="0:0:0:0.3"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unchecked" />
                                                        <VisualState x:Name="Indeterminate" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Border>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>

                                <ContentPresenter x:Name="ContentSite" Margin="4,0,20,0" VerticalAlignment="Stretch" HorizontalAlignment="Left" IsHitTestVisible="False"
                                                      Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>

                                <TextBox x:Name="PART_EditableTextBox" Margin="0,0,14,0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Focusable="True"
                                         Background="Transparent" Visibility="Hidden" Style="{x:Null}" IsReadOnly="{TemplateBinding IsReadOnly}">
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                            <Border x:Name="PART_ContentHost" Focusable="False"/>
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>

                                <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                    <Grid x:Name="DropDown" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder" Background="{StaticResource BackgroundBrush}" BorderThickness="1,0,1,1" BorderBrush="{StaticResource BorderBrush}">
                                            <ScrollViewer Margin="1">
                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border Padding="0,1,0,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Border x:Name="Border" Grid.Column="0" Background="Transparent" BorderBrush="Transparent" BorderThickness="1">
                                        <ContentPresenter/>
                                    </Border>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" SourceName="Border" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" From="Transparent" To="{StaticResource HoverColor}" Duration="0:0:0.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color">
                                                    <DiscreteColorKeyFrame KeyTime="0:0:0" Value="Transparent"/>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                                <Trigger Property="IsSelected" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color" From="Transparent" To="{StaticResource SelectionColor}" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color">
                                                    <DiscreteColorKeyFrame KeyTime="0:0:0" Value="Transparent"/>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type controls:DragDropReadyListBoxItem}" TargetType="{x:Type controls:DragDropReadyListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}"/>

            <Style TargetType="ContextMenu">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ContextMenu">
                            <Border x:Name="Border" Background="{StaticResource BackgroundBrush}" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarLineButton" TargetType="RepeatButton">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RepeatButton">
                            <ControlTemplate.Resources>
                                <SolidColorBrush x:Key="AnimatedBorderBrush" Color="{StaticResource BackgroundColor}"/>
                            </ControlTemplate.Resources>

                            <Border x:Name="Border" Margin="1"
                                    Background="{StaticResource BackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource AnimatedBorderBrush}">
                                <Path Fill="Black" SnapsToDevicePixels="True"
                                      HorizontalAlignment="Center" VerticalAlignment="Center"
                                      Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color" From="{StaticResource BackgroundColor}" To="{StaticResource BorderColor}" Duration="0:0:0.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color">
                                                    <DiscreteColorKeyFrame KeyTime="0:0:0" Value="{StaticResource BackgroundColor}"/>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarPageButton" TargetType="RepeatButton">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RepeatButton">
                            <Border Background="Transparent"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarThumb" TargetType="Thumb">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Thumb">
                            <Border x:Name="Border" Background="{StaticResource BackgroundBrush}" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="VerticalScrollBar" TargetType="ScrollBar">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="18"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition MaxHeight="18"/>
                    </Grid.RowDefinitions>

                    <Border Grid.Row="0" Grid.RowSpan="3" Background="{StaticResource BackgroundBrush}"/>
                    <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0.5 4 L 7.5 4 L 4 0 Z"/>
                    <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand"/>
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0"/>
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageDownCommand"/>
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton Grid.Row="2" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0.5 0 L 4 4 L 7.5 0 Z"/>
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="HorizontalScrollBar" TargetType="ScrollBar">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="18"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition MaxWidth="18"/>
                    </Grid.ColumnDefinitions>

                    <Border Grid.Column="0" Grid.ColumnSpan="3" Background="{StaticResource BackgroundBrush}"/>
                    <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0.5 L 4 7.5 L 0.5 4 Z"/>
                    <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand"/>
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1"/>
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand"/>
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton Grid.Column="2" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 1 0.5 L 4.5 4 L 1 7.5 Z"/>
                </Grid>
            </ControlTemplate>

            <Style x:Key="{x:Type ScrollBar}" TargetType="ScrollBar">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Height" Value="18"/>
                        <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}"/>
                    </Trigger>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Width" Value="18"/>
                        <Setter Property="Height" Value="Auto"/>
                        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="HasDropShadow" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToolTip">
                            <Border Name="Border"
                                Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                Background="{StaticResource BackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource BorderBrush}">
                                <ContentPresenter Margin="6,4" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ToolBarButtonBaseStyle" TargetType="{x:Type ButtonBase}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border Background="{TemplateBinding Background}">
                                <Border x:Name="Border" Background="Transparent">
                                    <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                                </Border>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" From="Transparent" To="{StaticResource SelectionColor}" Duration="0:0:0.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color">
                                                    <DiscreteColorKeyFrame KeyTime="0:0:0" Value="Transparent"/>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" BasedOn="{StaticResource ToolBarButtonBaseStyle}" TargetType="{x:Type Button}">
                <Style.Setters>
                    <Setter Property="MinWidth" Value="22"/>
                    <Setter Property="MinHeight" Value="22"/>
                </Style.Setters>
            </Style>
            <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" BasedOn="{StaticResource ToolBarButtonBaseStyle}" TargetType="{x:Type ToggleButton}">
                <Style.Setters>
                    <Setter Property="MinWidth" Value="22"/>
                    <Setter Property="MinHeight" Value="22"/>
                </Style.Setters>
            </Style>
            <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" BasedOn="{StaticResource ToolBarButtonBaseStyle}" TargetType="{x:Type CheckBox}"/>
            <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" BasedOn="{StaticResource ToolBarButtonBaseStyle}" TargetType="{x:Type RadioButton}"/>

            <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="Separator">
                <Setter Property="Background" Value="{StaticResource BorderBrush}"/>
            </Style>

            <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="Border" Padding="2" Background="{StaticResource BackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource BorderBrush}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="ReadOnly"/>
                                        <VisualState x:Name="MouseOver"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="EditStates">
                                        <VisualState x:Name="Editable">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_EditableTextBox">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentSite">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Uneditable"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <ToggleButton x:Name="ToggleButton" Focusable="false" ClickMode="Press"
                                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <ControlTemplate.Resources>
                                                <SolidColorBrush x:Key="AnimatedSelectionBrush" Color="Transparent"/>
                                            </ControlTemplate.Resources>
                                            
                                            <Border Background="{StaticResource BackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource BorderBrush}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="1"/>
                                                        <ColumnDefinition Width="14"/>
                                                    </Grid.ColumnDefinitions>

                                                    <Rectangle Grid.Column="1" Fill="{StaticResource BorderBrush}"/>

                                                    <Rectangle x:Name="Rectangle" Grid.Column="2" Margin="-1" Fill="{StaticResource AnimatedSelectionBrush}"/>
                                                    <Rectangle Grid.Column="2" Margin="-1" Fill="{StaticResource SelectionBrush}"
                                                               Visibility="{TemplateBinding IsChecked, Converter={StaticResource VisibilityConverter}}"/>

                                                    <Path Grid.Column="2" Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 3 3 L 6 0 Z"/>
                                                </Grid>
                                            </Border>

                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation Storyboard.TargetName="Rectangle" Storyboard.TargetProperty="Fill.Color" From="Transparent" To="{StaticResource SelectionColor}" Duration="0:0:0.1"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Rectangle" Storyboard.TargetProperty="Fill.Color">
                                                                    <DiscreteColorKeyFrame KeyTime="0:0:0" Value="Transparent"/>
                                                                </ColorAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>

                                <ContentPresenter x:Name="ContentSite" Margin="4,0,20,0" VerticalAlignment="Stretch" HorizontalAlignment="Left" IsHitTestVisible="False"
                                                      Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>

                                <TextBox x:Name="PART_EditableTextBox"  Margin="0,0,14,0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Focusable="True"
                                         Background="Transparent" Visibility="Hidden" Style="{x:Null}" IsReadOnly="{TemplateBinding IsReadOnly}">
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                            <Border x:Name="PART_ContentHost" Focusable="False"/>
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>

                                <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                    <Grid x:Name="DropDown" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder" Background="{StaticResource BackgroundBrush}" BorderThickness="1,0,1,1" BorderBrush="{StaticResource BorderBrush}">
                                            <ScrollViewer Margin="1">
                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Cursor" Value="SizeAll"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="Transparent">
                                <Rectangle Margin="0,2">
                                    <Rectangle.Fill>
                                        <DrawingBrush Viewport="0,0,4,4" ViewportUnits="Absolute" Viewbox="0,0,8,8" ViewboxUnits="Absolute" TileMode="Tile">
                                            <DrawingBrush.Drawing>
                                                <DrawingGroup>
                                                    <GeometryDrawing Brush="{StaticResource BorderBrush}" Geometry="M 4 4 L 4 8 L 8 8 L 8 4 z"/>
                                                </DrawingGroup>
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ToolBarOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="Border" CornerRadius="0,3,3,0" Background="{StaticResource BackgroundBrush}">
                                <Grid>
                                    <!--<Path x:Name="Arrow" Fill="Black" VerticalAlignment="Bottom" Margin="2,3" Data="M -0.5 3 L 5.5 3 L 2.5 6 Z"/>-->
                                    <ContentPresenter/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type ToolBar}" TargetType="{x:Type ToolBar}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToolBar}">
                            <Border x:Name="Border" Background="{StaticResource BackgroundBrush}">
                                <DockPanel>
                                    <ToggleButton DockPanel.Dock="Right" IsEnabled="{TemplateBinding HasOverflowItems}"
                                              Style="{StaticResource ToolBarOverflowButtonStyle}" ClickMode="Press"
                                              IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Popup x:Name="OverflowPopup" AllowsTransparency="true" Placement="Bottom" StaysOpen="false" Focusable="false" PopupAnimation="Slide"
                                           IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                            <Border x:Name="DropDownBorder" Background="{StaticResource BackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource BorderBrush}">
                                                <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                                                  Margin="2" WrapWidth="200" Focusable="true"
                                                                  FocusVisualStyle="{x:Null}"
                                                                  KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                            </Border>
                                        </Popup>
                                    </ToggleButton>
                                    <Thumb x:Name="ToolBarThumb" Style="{StaticResource ToolBarThumbStyle}" Width="10"/>
                                    <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="2,1,2,2"/>
                                </DockPanel>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsOverflowOpen" Value="true">
                                    <Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="false"/>
                                </Trigger>
                                <Trigger Property="ToolBarTray.IsLocked" Value="true">
                                    <Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type ToolBarTray}" TargetType="{x:Type ToolBarTray}">
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
            </Style>

            <ControlTemplate x:Key="ExpanderToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
                <Grid Width="20" Height="20" Margin="0,0,4,0">
                    <Ellipse Stroke="Gray" StrokeThickness="1" Fill="{StaticResource BackgroundBrush}"/>
                    <Path x:Name="Arrow" Data="M -4 -1.5, 0 2, 4 -1.5" Stroke="Gray" StrokeThickness="2"
                                  HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <RotateTransform x:Name="RotateTransform"/>
                                <TranslateTransform X="2" Y="2"/>
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                </Grid>

                <ControlTemplate.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="RotateTransform" To="180" Duration="0:0:0.2"
                                                             Storyboard.TargetProperty="Angle"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="RotateTransform" To="0" Duration="0:0:0.2"
                                                             Storyboard.TargetProperty="Angle"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="{x:Type Expander}" TargetType="{x:Type Expander}">
                <Style.Setters>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Expander}">
                                <DockPanel PreviewMouseWheel="ExpanderPreviewMouseWheelHandler">
                                    <Grid DockPanel.Dock="Top">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <ContentPresenter Grid.Column="0" Content="{TemplateBinding Header}"/>
                                        <ToggleButton x:Name="ExpanderButton" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Template="{StaticResource ExpanderToggleButtonTemplate}"
                                                  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </Grid>

                                    <ScrollViewer x:Name="ScrollViewer" Focusable="False"
                                                  DockPanel.Dock="Bottom" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden">
                                        <ScrollViewer.Tag>
                                            <sys:Double>0.0</sys:Double>
                                        </ScrollViewer.Tag>
                                        <ScrollViewer.Height>
                                            <MultiBinding Converter="{StaticResource MultiplyConverter}">
                                                <Binding Path="ActualHeight" ElementName="ExpanderContent"/>
                                                <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                            </MultiBinding>
                                        </ScrollViewer.Height>


                                        <ContentPresenter x:Name="ExpanderContent" VerticalAlignment="Top"/>
                                    </ScrollViewer>
                                </DockPanel>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ScrollViewer" Storyboard.TargetProperty="Tag" To="1" Duration="0:0:0.2">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CircleEase/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ScrollViewer" Storyboard.TargetProperty="Tag" To="0" Duration="0:0:0.2">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CircleEase/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>

            <Style x:Key="{x:Type controls:DefaultExpandedExpander}" TargetType="{x:Type controls:DefaultExpandedExpander}">
                <Style.Setters>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Expander}">
                                <DockPanel PreviewMouseWheel="ExpanderPreviewMouseWheelHandler">
                                    <Grid DockPanel.Dock="Top">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <ContentPresenter Grid.Column="0" Content="{TemplateBinding Header}"/>
                                        <ToggleButton x:Name="ExpanderButton" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Template="{StaticResource ExpanderToggleButtonTemplate}"
                                                  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </Grid>

                                    <ScrollViewer x:Name="ScrollViewer" Focusable="False"
                                                  DockPanel.Dock="Bottom" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden">
                                        <ScrollViewer.Tag>
                                            <sys:Double>1.0</sys:Double>
                                        </ScrollViewer.Tag>
                                        <ScrollViewer.Height>
                                            <MultiBinding Converter="{StaticResource MultiplyConverter}">
                                                <Binding Path="ActualHeight" ElementName="ExpanderContent"/>
                                                <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                            </MultiBinding>
                                        </ScrollViewer.Height>


                                        <ContentPresenter x:Name="ExpanderContent" VerticalAlignment="Top"/>
                                    </ScrollViewer>
                                </DockPanel>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded" Value="False">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ScrollViewer" Storyboard.TargetProperty="Tag" To="0" Duration="0:0:0.2">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CircleEase/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ScrollViewer" Storyboard.TargetProperty="Tag" To="1" Duration="0:0:0.2">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CircleEase/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>

            <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
                <Style.Setters>
                    <Setter Property="MinWidth" Value="75"/>
                    <Setter Property="MinHeight" Value="23"/>
                    <Setter Property="UseLayoutRounding" Value="False"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                
                                <Border x:Name="Border1" BorderBrush="#FFADADAD" BorderThickness="1" Background="#FFE1E1E1">

                                    <Border x:Name="Border2" BorderBrush="Transparent" BorderThickness="2" Background="Transparent" Margin="-1" Padding="4,2">
                                        <ContentPresenter UseLayoutRounding="True" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>

                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup Name="CommonStates">
                                            <VisualState Name="Normal"/>
                                            <VisualState Name="MouseOver">
                                                <Storyboard>
                                                    <ThicknessAnimation Storyboard.TargetName="Border2" Storyboard.TargetProperty="BorderThickness" To="1" Duration="0"/>
                                                    <ThicknessAnimation Storyboard.TargetName="Border2" Storyboard.TargetProperty="Padding" To="5,3" Duration="0"/>
                                                    <ColorAnimation Storyboard.TargetName="Border2" Storyboard.TargetProperty="BorderBrush.Color" To="#FF0078D7" Duration="0"/>
                                                    <ColorAnimation Storyboard.TargetName="Border2" Storyboard.TargetProperty="Background.Color" To="#FFE5F1FB" Duration="0:0:0:0.3"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState Name="Pressed">
                                                <Storyboard>
                                                    <ThicknessAnimation Storyboard.TargetName="Border2" Storyboard.TargetProperty="BorderThickness" To="1" Duration="0"/>
                                                    <ThicknessAnimation Storyboard.TargetName="Border2" Storyboard.TargetProperty="Padding" To="5,3" Duration="0"/>
                                                    <ColorAnimation Storyboard.TargetName="Border2" Storyboard.TargetProperty="BorderBrush.Color" To="#FF005499" Duration="0"/>
                                                    <ColorAnimation Storyboard.TargetName="Border2" Storyboard.TargetProperty="Background.Color" To="#FFCCE4F7" Duration="0:0:0:0.3"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState Name="Disabled">
                                                <Storyboard>
                                                    <ThicknessAnimation Storyboard.TargetName="Border2" Storyboard.TargetProperty="BorderThickness" To="1" Duration="0"/>
                                                    <ThicknessAnimation Storyboard.TargetName="Border2" Storyboard.TargetProperty="Padding" To="5,3" Duration="0"/>
                                                    <ColorAnimation Storyboard.TargetName="Border2" Storyboard.TargetProperty="BorderBrush.Color" To="#FFBFBFBF" Duration="0"/>
                                                    <ColorAnimation Storyboard.TargetName="Border2" Storyboard.TargetProperty="Background.Color" To="#FFCCCCCC" Duration="0"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>

                                        <VisualStateGroup Name="FocusStates">
                                            <VisualState Name="Unfocused"/>
                                            <VisualState Name="Focused">
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetName="Border1" Storyboard.TargetProperty="BorderBrush.Color" To="#FF0078D7" Duration="0:0:0:0.3"/>
                                                    <ThicknessAnimation Storyboard.TargetName="Border1" Storyboard.TargetProperty="BorderThickness" To="2" Duration="0:0:0:0.3"/>
                                                    <ThicknessAnimation Storyboard.TargetName="Border2" Storyboard.TargetProperty="Margin" To="-2" Duration="0:0:0:0.3"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Border>
                                
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Trigger.Setters>
                                            <Setter Property="Foreground" Value="#FF838383"/>
                                        </Trigger.Setters>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>

            <Style x:Key="{x:Type GroupBox}" TargetType="{x:Type GroupBox}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GroupBox}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                
                                <Grid Grid.Row="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <ContentPresenter Grid.Row="0" Grid.Column="0" Margin="2" ContentSource="Header" RecognizesAccessKey="True"/>
                                    <Rectangle Grid.Row="1" Grid.Column="0" Height="4" Fill="{StaticResource SelectionBrush}"/>
                                </Grid>

                                <Border Grid.Row="1" BorderThickness="1" BorderBrush="{StaticResource BorderBrush}">
                                    <ContentPresenter Margin="4" />
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type TabControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <TabPanel Grid.Row="0" IsItemsHost="True"/>
                                <Border Grid.Row="1" Background="{StaticResource BackgroundBrush}" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1">
                                    <ContentPresenter ContentSource="SelectedContent"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="4"/>
                                </Grid.RowDefinitions>

                                <Border x:Name="Border" Grid.Row="0" Background="{StaticResource BackgroundBrush}">
                                    <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Left" ContentSource="Header" Margin="4"/>
                                </Border>
                                <Rectangle x:Name="Rectangle" Grid.Row="1" Fill="{StaticResource SelectionBrush}" Opacity="0"/>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" From="{StaticResource BackgroundColor}" To="{StaticResource HoverColor}" Duration="0:0:0.3"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color">
                                                    <DiscreteColorKeyFrame KeyTime="0:0:0" Value="{StaticResource BackgroundColor}"/>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                                <Trigger Property="IsSelected" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="Rectangle" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Rectangle" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SmallCloseButton" TargetType="Button">
                <Style.Setters>
                    <Setter Property="Width" Value="16"/>
                    <Setter Property="Height" Value="16"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Grid>
                                    <Border>
                                        <Border.Background>
                                            <SolidColorBrush x:Name="Background" Color="Transparent"/>
                                        </Border.Background>
                                    </Border>
                                    <Path Data="M 4 4, 12 12 M 4 12, 12 4">
                                        <Path.Stroke>
                                            <SolidColorBrush x:Name="Foreground" Color="DimGray"/>
                                        </Path.Stroke>
                                    </Path>
                                </Grid>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Color" To="#E81123" Duration="0:0:0.1"/>
                                                    <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="Color" To="White" Duration="0:0:0.1"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Color" To="Transparent" Duration="0:0:0.3"/>
                                                    <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="Color" To="DimGray" Duration="0:0:0.1"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>

            <Style x:Key="{x:Type controls:FormattingTextBlock}" TargetType="{x:Type controls:FormattingTextBlock}">
                <Style.Setters>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type controls:FormattingTextBlock}">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                    <TextBlock x:Name="PART_ContentHost" TextWrapping="Wrap" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>

            <Style x:Key="{x:Type controls:InlineList}" TargetType="{x:Type controls:InlineList}">
                <Style.Setters>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type controls:InlineList}">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Grid.Column="0" Margin="6, 0" Text="•"/>
                                        <TextBlock x:Name="PART_ContentHost" Grid.Column="1" TextWrapping="Wrap" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                    </Grid>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>
            
        </ResourceDictionary>
    </Application.Resources>
</Application>
